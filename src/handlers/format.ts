import { format, differenceInCalendarDays } from 'date-fns'
import { uk } from 'date-fns/locale/uk'

import { ErrorType, QueryError, type DocumentStatus, StatusCode } from 'src/services/checker/types.ts'

const DP_DOC_URL = 'https://pasport.org.ua/solutions/checker'
const INTERNAL_ERR_SUFFIX = '\n\n–ü—Ä–æ–ø–æ–Ω—É—é –≤–∞–º –ø–æ–∫–∏ –≤ —Ä—É—á–Ω–æ–º—É —Ä–µ–∂–∏–º—ñ –ø–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ —Å—Ç–∞—Ç—É—Å –¥–æ–∫—É–º–µ–Ω—Ç—É –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ –î–ü –î–æ–∫—É–º–µ–Ω—Ç:\n' +
  DP_DOC_URL

export const formatError = (err: any) => {
  const qe = QueryError.from(err)
  let msg: string
  switch (qe.type) {
    case ErrorType.ApiError:
      return `ü§∑ –Ø –Ω—ñ—á–æ–≥–æ –Ω–µ –∑–Ω–∞–π—à–æ–≤, –±—É–¥—å-–ª–∞—Å–∫–∞ –ø–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ñ—Å—Ç—å –≤–≤–µ–¥–µ–Ω–∏—Ö –¥–∞–Ω–∏—Ö.\n` + qe.message
    case ErrorType.QuotaError:
      return '‚åõÔ∏è –ó–∞–Ω–∞–¥—Ç–æ –±–∞–≥–∞—Ç–æ –∑–∞–ø–∏—Ç—ñ–≤. –ó–∞—á–µ–∫–∞–π—Ç–µ –±—É–¥—å-–ª–∞—Å–∫–∞ —Ö–≤–∏–ª–∏–Ω–∫—É –ø–æ–∫–∏ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ–π –∑–∞–ø–∏—Ç –±—É–¥–µ –æ–±—Ä–æ–±–ª–µ–Ω–Ω–æ.'
    case ErrorType.TimeoutError:
      return '‚åõÔ∏è –°–µ—Ä–≤–µ—Ä –î–ü –î–æ–∫—É–º–µ–Ω—Ç –Ω–µ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î. –°–ø—Ä–æ–±—É–π—Ç–µ –±—É–¥—å-–ª–∞—Å–∫–∞ –ø—ñ–∑–Ω—ñ—à–µ –∞–±–æ –∑–∞–π–¥—ñ—Ç—å –Ω–∞ —Å–∞–π—Ç –î–ü –î–æ–∫—É–º–µ–Ω—Ç:\n\n' +
        DP_DOC_URL
    case ErrorType.HttpError:
      msg = 'üôà –í–∏–±–∞—á—Ç–µ, –∞–ª–µ —Å–µ—Ä–≤–µ—Ä –î–ü –î–æ–∫—É–º–µ–Ω—Ç –ø–æ–≤–µ—Ä–Ω—É–≤ –ø–æ–º–∏–ª–∫—É.'
      break
    case ErrorType.CrawlError:
      msg = 'ü§Ø –í–∏–±–∞—á—Ç–µ, —Å—Ç–∞–ª–∞—Å—å –≤–Ω—É—Ç—Ä—ñ—à–Ω—è –ø–æ–º–∏–ª–∫–∞.'
      break
  }

  return msg + '`' + qe.message + '`' + INTERNAL_ERR_SUFFIX
}

export const formatResult = ({ code, message, updatedAt, request }: DocumentStatus) => {
  const now = new Date()
  const docId = request.series ? `${request.series}${request.number}` : request.number
  let msg: string
  switch (code) {
    case StatusCode.Shipped:
      msg = `üì¶ –î–æ–∫—É–º–µ–Ω—Ç ${docId} –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ –¥–æ —Ü–µ–Ω—Ç—Ä—É –ø–µ—Ä—Å–æ–Ω–∞–ª—ñ–∑–∞—Ü—ñ—ó`
      break
    case StatusCode.InTransit:
      msg = `üöö –î–æ–∫—É–º–µ–Ω—Ç ${docId} –≤ –¥–æ—Ä–æ–∑—ñ –¥–æ –î–ü –î–æ–∫—É–º–µ–Ω—Ç.`
      break
    case StatusCode.Ready:
      msg = `‚úÖ –î–æ–∫—É–º–µ–Ω—Ç ${docId} –≥–æ—Ç–æ–≤–∏–π –¥–æ –≤–∏–¥–∞—á—ñ!`
      break
    default:
      msg = `‚ÑπÔ∏è –°—Ç–∞—Ç—É—Å –¥–æ–∫—É–º–µ–Ω—Ç—É ${docId}:`
      break
  }

  const diffDays = differenceInCalendarDays(updatedAt, now)
  let diffStr: string

  switch (diffDays) {
    case 0:
      diffStr = '—Å—å–æ–≥–æ–¥–Ω—ñ'
      break
    case 1:
      diffStr = '–≤—á–æ—Ä–∞'
      break
    case 2:
    case 3:
    case 4:
      diffStr = `${diffDays} –¥–Ω—ñ —Ç–æ–º—É`
      break
    default:
      diffStr = `${diffDays} –¥–Ω—ñ–≤ —Ç–æ–º—É`
      break
  }

  const dateFmt = format(updatedAt, 'do MMMM yyyy', { locale: uk })
  msg = `\n\n–í—ñ–¥–ø–æ–≤—ñ–¥—å –≤—ñ–¥ –î–ü –î–æ–∫—É–º–µ–Ω—Ç:\n${message}` +
    '\n\n*–ó–≤–µ—Ä–Ω—ñ—Ç—å —É–≤–∞–≥—É, —â–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –º–æ–∂–µ –≤—ñ–¥—Ä—ñ–∑–Ω—è—Ç–∏—Å—å –≤—ñ–¥ —Ä–µ–∞–ª—å–Ω–æ–≥–æ —Å—Ç–∞—Ç—É—Å—É.*\n\n' +
    `üïí –î–∞—Ç–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–∞—Ç—É—Å—É: ${dateFmt} (${diffStr})`
  return msg
}
